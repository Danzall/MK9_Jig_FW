   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	MDUC	=	0xf00e8
  26                             	MDAL	=	0xffff0
  27                             	MDAH	=	0xffff2
  28                             	MDBL	=	0xffff6
  29                             	MDBH	=	0xffff4
  30                             	MDCL	=	0xf00e0
  31                             	MDCH	=	0xf00e2
  32                             	.text
  33                             	.Ltext0:
  34                             		.comm	_intFlag0,2,2
  35                             		.global	_UART_Tx
  37                             	_UART_Tx:
  38                             	.LFB0:
  39                             		.file 1 "../src/UART.c"
   1:../src/UART.c **** /*
   2:../src/UART.c ****  * UART.c
   3:../src/UART.c ****  *
   4:../src/UART.c ****  *  Created on: Jun 21, 2018
   5:../src/UART.c ****  *      Author: Jeefo
   6:../src/UART.c ****  */
   7:../src/UART.c **** /**************************************************************************************************
   8:../src/UART.c **** Includes
   9:../src/UART.c **** ***************************************************************************************************
  10:../src/UART.c **** #include "r_cg_macrodriver.h"
  11:../src/UART.c **** #include "r_cg_cgc.h"
  12:../src/UART.c **** #include "r_cg_port.h"
  13:../src/UART.c **** #include "r_cg_serial.h"
  14:../src/UART.c **** #include "r_cg_timer.h"
  15:../src/UART.c **** /* Start user code for include. Do not edit comment generated here */
  16:../src/UART.c **** #include "stdio.h"
  17:../src/UART.c **** #include "board.h"
  18:../src/UART.c **** #include <string.h>
  19:../src/UART.c **** /* End user code. Do not edit comment generated here */
  20:../src/UART.c **** #include "r_cg_userdefine.h"
  21:../src/UART.c **** 
  22:../src/UART.c **** int intFlag0;
  23:../src/UART.c **** 
  24:../src/UART.c **** void UART_Tx(char *data){
  40                             		.loc 1 24 0
  41                             		; start of function
  42                             		; locals: 2 bytes
  43                             		; outgoing: 2 bytes
  44 0000 20 04                   		subw	sp, #4
  45                             	.LCFI0:
  25:../src/UART.c **** 	int length;
  26:../src/UART.c **** 	length = strlen(data);
  46                             		.loc 1 26 0
  47 0002 A8 08                   		movw	ax, [sp+8]
  48 0004 BD F0                   		movw	r8, ax
  49 0006 B8 00                   		movw	[sp], ax
  50 0008 FC 00 00 00             		call	!!%code(_strlen)
  51 000c AD F0                   		movw	ax, r8
  52 000e B8 02                   		movw	[sp+2], ax
  27:../src/UART.c **** 	while(*data != 0){
  53                             		.loc 1 27 0
  54 0010 EC 2E 00 00             		br	!!.L2
  55                             	.L3:
  56                             	.LBB2:
  28:../src/UART.c **** 		sendByte(*data);
  57                             		.loc 1 28 0
  58 0014 A8 08                   		movw	ax, [sp+8]
  59 0016 BD F0                   		movw	r8, ax
  60 0018 BD F2                   		movw	r10, ax
  61 001a FA F2                   		movw	hl, r10
  62 001c 8B                      		mov	a, [hl]
  63 001d 9D F0                   		mov	r8, a
  64 001f F4 F1                   		clrb	r9
  65 0021 AD F0                   		movw	ax, r8
  66 0023 B8 00                   		movw	[sp], ax
  67 0025 FC 00 00 00             		call	!!%code(_sendByte)
  29:../src/UART.c **** 		data++;
  68                             		.loc 1 29 0
  69 0029 A8 08                   		movw	ax, [sp+8]
  70 002b A1                      		incw	ax
  71 002c B8 08                   		movw	[sp+8], ax
  72                             	.L2:
  73                             	.LBE2:
  27:../src/UART.c **** 	while(*data != 0){
  74                             		.loc 1 27 0
  75 002e A8 08                   		movw	ax, [sp+8]
  76 0030 BD F0                   		movw	r8, ax
  77 0032 BD F2                   		movw	r10, ax
  78 0034 FA F2                   		movw	hl, r10
  79 0036 8B                      		mov	a, [hl]
  80 0037 9D F0                   		mov	r8, a
  81 0039 D4 F0                   		cmp0	r8
  82 003b 61 E8                   		 skz
  83 003d EC 14 00 00             		 br	!!.L3
  30:../src/UART.c **** 	}
  31:../src/UART.c **** }
  84                             		.loc 1 31 0
  85 0041 10 04                   		addw	sp, #4
  86 0043 D7                      		ret
  87                             	.LFE0:
  89                             		.global	_tx0Done
  91                             	_tx0Done:
  92                             	.LFB1:
  32:../src/UART.c **** 
  33:../src/UART.c **** void tx0Done(){
  93                             		.loc 1 33 0
  34:../src/UART.c **** 	intFlag0 = 1;
  94                             		.loc 1 34 0
  95 0044 E6                      		onew	ax
  96 0045 BF 00 00                		movw	!_intFlag0, ax
  35:../src/UART.c **** }
  97                             		.loc 1 35 0
  98 0048 D7                      		ret
  99                             	.LFE1:
 101                             		.global	_sendByte
 103                             	_sendByte:
 104                             	.LFB2:
  36:../src/UART.c **** 
  37:../src/UART.c **** 
  38:../src/UART.c **** void sendByte(char send){
 105                             		.loc 1 38 0
  39:../src/UART.c **** 
  40:../src/UART.c **** 	TXD0 = send;
 106                             		.loc 1 40 0
 107 0049 C9 F0 10 FF             		movw	r8, #-240
 108 004d 88 04                   		mov	a, [sp+4]
 109 004f 9D F2                   		mov	r10, a
 110 0051 AD F0                   		movw	ax, r8
 111 0053 BD F4                   		movw	r12, ax
 112 0055 EA F4                   		movw	de, r12
 113 0057 8D F2                   		mov	a, r10
 114 0059 99                      		mov	[de], a
  41:../src/UART.c **** 	while (intFlag0 != 1);
 115                             		.loc 1 41 0
 116 005a 00                      		nop
 117                             	.L6:
 118                             		.loc 1 41 0 is_stmt 0 discriminator 1
 119 005b AF 00 00                		movw	ax, !_intFlag0
 120 005e BD F0                   		movw	r8, ax
 121 0060 44 01 00                		cmpw	ax, #1
 122 0063 61 E8                   		 skz
 123 0065 EC 5B 00 00             		 br	!!.L6
  42:../src/UART.c **** 	intFlag0 = 0;
 124                             		.loc 1 42 0 is_stmt 1
 125 0069 F6                      		clrw	ax
 126 006a BF 00 00                		movw	!_intFlag0, ax
  43:../src/UART.c **** 
  44:../src/UART.c **** }
 127                             		.loc 1 44 0
 128 006d D7                      		ret
 129                             	.LFE2:
 177                             	.Letext0:
