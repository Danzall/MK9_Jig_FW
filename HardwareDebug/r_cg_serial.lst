   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	MDUC	=	0xf00e8
  26                             	MDAL	=	0xffff0
  27                             	MDAH	=	0xffff2
  28                             	MDBL	=	0xffff6
  29                             	MDBH	=	0xffff4
  30                             	MDCL	=	0xf00e0
  31                             	MDCH	=	0xf00e2
  32                             	.text
  33                             	.Ltext0:
  34                             		.comm	_gp_uart0_tx_address,2,2
  35                             		.comm	_g_uart0_tx_count,2,2
  36                             		.comm	_gp_uart0_rx_address,2,2
  37                             		.comm	_g_uart0_rx_count,2,2
  38                             		.comm	_g_uart0_rx_length,2,2
  39                             		.global	_R_SAU0_Create
  41                             	_R_SAU0_Create:
  42                             	.LFB0:
  43                             		.file 1 "../src/r_cg_serial.c"
   1:../src/r_cg_serial.c **** /**************************************************************************************************
   2:../src/r_cg_serial.c **** * DISCLAIMER
   3:../src/r_cg_serial.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_serial.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_serial.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_serial.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_serial.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_serial.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_serial.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_serial.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_serial.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_serial.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_serial.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_serial.c **** * following link:
  15:../src/r_cg_serial.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_serial.c **** *
  17:../src/r_cg_serial.c **** * Copyright (C) 2011, 2016 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_serial.c **** ***************************************************************************************************
  19:../src/r_cg_serial.c **** 
  20:../src/r_cg_serial.c **** /**************************************************************************************************
  21:../src/r_cg_serial.c **** * File Name    : r_cg_serial.c
  22:../src/r_cg_serial.c **** * Version      : CodeGenerator for RL78/G13 V2.03.04.01 [11 Nov 2016]
  23:../src/r_cg_serial.c **** * Device(s)    : R5F100AC
  24:../src/r_cg_serial.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_serial.c **** * Description  : This file implements device driver for Serial module.
  26:../src/r_cg_serial.c **** * Creation Date: 7/11/2018
  27:../src/r_cg_serial.c **** ***************************************************************************************************
  28:../src/r_cg_serial.c **** 
  29:../src/r_cg_serial.c **** /**************************************************************************************************
  30:../src/r_cg_serial.c **** Includes
  31:../src/r_cg_serial.c **** ***************************************************************************************************
  32:../src/r_cg_serial.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_serial.c **** #include "r_cg_serial.h"
  34:../src/r_cg_serial.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_serial.c **** /* End user code. Do not edit comment generated here */
  36:../src/r_cg_serial.c **** #include "r_cg_userdefine.h"
  37:../src/r_cg_serial.c **** 
  38:../src/r_cg_serial.c **** /**************************************************************************************************
  39:../src/r_cg_serial.c **** Global variables and functions
  40:../src/r_cg_serial.c **** ***************************************************************************************************
  41:../src/r_cg_serial.c **** volatile uint8_t * gp_uart0_tx_address;        /* uart0 transmit buffer address */
  42:../src/r_cg_serial.c **** volatile uint16_t  g_uart0_tx_count;           /* uart0 transmit data number */
  43:../src/r_cg_serial.c **** volatile uint8_t * gp_uart0_rx_address;        /* uart0 receive buffer address */
  44:../src/r_cg_serial.c **** volatile uint16_t  g_uart0_rx_count;           /* uart0 receive data number */
  45:../src/r_cg_serial.c **** volatile uint16_t  g_uart0_rx_length;          /* uart0 receive data length */
  46:../src/r_cg_serial.c **** /* Start user code for global. Do not edit comment generated here */
  47:../src/r_cg_serial.c **** /* End user code. Do not edit comment generated here */
  48:../src/r_cg_serial.c **** 
  49:../src/r_cg_serial.c **** /**************************************************************************************************
  50:../src/r_cg_serial.c **** * Function Name: R_SAU0_Create
  51:../src/r_cg_serial.c **** * Description  : This function initializes the SAU0 module.
  52:../src/r_cg_serial.c **** * Arguments    : None
  53:../src/r_cg_serial.c **** * Return Value : None
  54:../src/r_cg_serial.c **** ***************************************************************************************************
  55:../src/r_cg_serial.c **** void R_SAU0_Create(void)
  56:../src/r_cg_serial.c **** {
  44                             		.loc 1 56 0
  57:../src/r_cg_serial.c ****     SAU0EN = 1U;    /* supply SAU0 clock */
  45                             		.loc 1 57 0
  46 0000 C9 F0 F0 00             		movw	r8, #240
  47 0004 AD F0                   		movw	ax, r8
  48 0006 BD F2                   		movw	r10, ax
  49 0008 FA F2                   		movw	hl, r10
  50 000a 71 A2                   		set1	[hl].2 ;insvmisalignqi [hl],#1,#2,#1 {0}
  58:../src/r_cg_serial.c ****     NOP();
  51                             		.loc 1 58 0
  52                             	 ; 58 "../src/r_cg_serial.c" 1
  53 000c 00                      		nop
  54                             	 ; 0 "" 2
  59:../src/r_cg_serial.c ****     NOP();
  55                             		.loc 1 59 0
  56                             	 ; 59 "../src/r_cg_serial.c" 1
  57 000d 00                      		nop
  58                             	 ; 0 "" 2
  60:../src/r_cg_serial.c ****     NOP();
  59                             		.loc 1 60 0
  60                             	 ; 60 "../src/r_cg_serial.c" 1
  61 000e 00                      		nop
  62                             	 ; 0 "" 2
  61:../src/r_cg_serial.c ****     NOP();
  63                             		.loc 1 61 0
  64                             	 ; 61 "../src/r_cg_serial.c" 1
  65 000f 00                      		nop
  66                             	 ; 0 "" 2
  62:../src/r_cg_serial.c ****     SPS0 = _0001_SAU_CK00_FCLK_1 | _0000_SAU_CK01_FCLK_0;
  67                             		.loc 1 62 0
  68 0010 C9 F0 26 01             		movw	r8, #294
  69 0014 AD F0                   		movw	ax, r8
  70 0016 BD F2                   		movw	r10, ax
  71 0018 EA F2                   		movw	de, r10
  72 001a E6                      		onew	ax
  73 001b B9                      		movw	[de], ax
  63:../src/r_cg_serial.c ****     R_UART0_Create();
  74                             		.loc 1 63 0
  75 001c FC 00 00 00             		call	!!%code(_R_UART0_Create)
  64:../src/r_cg_serial.c **** }
  76                             		.loc 1 64 0
  77 0020 D7                      		ret
  78                             	.LFE0:
  80                             		.global	_R_UART0_Create
  82                             	_R_UART0_Create:
  83                             	.LFB1:
  65:../src/r_cg_serial.c **** 
  66:../src/r_cg_serial.c **** /**************************************************************************************************
  67:../src/r_cg_serial.c **** * Function Name: R_UART0_Create
  68:../src/r_cg_serial.c **** * Description  : This function initializes the UART0 module.
  69:../src/r_cg_serial.c **** * Arguments    : None
  70:../src/r_cg_serial.c **** * Return Value : None
  71:../src/r_cg_serial.c **** ***************************************************************************************************
  72:../src/r_cg_serial.c **** void R_UART0_Create(void)
  73:../src/r_cg_serial.c **** {
  84                             		.loc 1 73 0
  74:../src/r_cg_serial.c ****     /* UART0 initial setting */
  75:../src/r_cg_serial.c ****     ST0 |= _0001_SAU_CH0_STOP_TRG_ON;    /* UART0 transmit disable */
  85                             		.loc 1 75 0
  86 0021 C9 F2 24 01             		movw	r10, #292
  87 0025 C9 F0 24 01             		movw	r8, #292
  88 0029 AD F0                   		movw	ax, r8
  89 002b BD F4                   		movw	r12, ax
  90 002d FA F4                   		movw	hl, r12
  91 002f AB                      		movw	ax, [hl]
  92 0030 BD F0                   		movw	r8, ax
  93 0032 6A F0 01                		or	r8, #1 ;iorhi3 r8,r8,#1
  94 0035 AD F2                   		movw	ax, r10
  95 0037 BD F4                   		movw	r12, ax
  96 0039 EA F4                   		movw	de, r12
  97 003b AD F0                   		movw	ax, r8
  98 003d B9                      		movw	[de], ax
  76:../src/r_cg_serial.c ****     STMK0 = 1U;    /* disable INTST0 interrupt */
  99                             		.loc 1 76 0
 100 003e C9 F0 E5 FF             		movw	r8, #-27
 101 0042 AD F0                   		movw	ax, r8
 102 0044 BD F2                   		movw	r10, ax
 103 0046 FA F2                   		movw	hl, r10
 104 0048 71 D2                   		set1	[hl].5 ;insvmisalignqi [hl],#1,#5,#1 {0}
  77:../src/r_cg_serial.c ****     STIF0 = 0U;    /* clear INTST0 interrupt flag */
 105                             		.loc 1 77 0
 106 004a C9 F0 E1 FF             		movw	r8, #-31
 107 004e AD F0                   		movw	ax, r8
 108 0050 BD F4                   		movw	r12, ax
 109 0052 FA F4                   		movw	hl, r12
 110 0054 71 D3                   		clr1	[hl].5 ;insvmisalignqi [hl],#1,#5,#0 {0}
  78:../src/r_cg_serial.c ****     SRMK0 = 1U;    /* disable INTSR0 interrupt */
 111                             		.loc 1 78 0
 112 0056 C9 F0 E5 FF             		movw	r8, #-27
 113 005a AD F0                   		movw	ax, r8
 114 005c BD F2                   		movw	r10, ax
 115 005e FA F2                   		movw	hl, r10
 116 0060 71 E2                   		set1	[hl].6 ;insvmisalignqi [hl],#1,#6,#1 {0}
  79:../src/r_cg_serial.c ****     SRIF0 = 0U;    /* clear INTSR0 interrupt flag */
 117                             		.loc 1 79 0
 118 0062 C9 F0 E1 FF             		movw	r8, #-31
 119 0066 AD F0                   		movw	ax, r8
 120 0068 BD F4                   		movw	r12, ax
 121 006a FA F4                   		movw	hl, r12
 122 006c 71 E3                   		clr1	[hl].6 ;insvmisalignqi [hl],#1,#6,#0 {0}
  80:../src/r_cg_serial.c ****     SREMK0 = 1U;   /* disable INTSRE0 interrupt */
 123                             		.loc 1 80 0
 124 006e C9 F0 E5 FF             		movw	r8, #-27
 125 0072 AD F0                   		movw	ax, r8
 126 0074 BD F2                   		movw	r10, ax
 127 0076 FA F2                   		movw	hl, r10
 128 0078 71 F2                   		set1	[hl].7 ;insvmisalignqi [hl],#1,#7,#1 {0}
  81:../src/r_cg_serial.c ****     SREIF0 = 0U;   /* clear INTSRE0 interrupt flag */
 129                             		.loc 1 81 0
 130 007a C9 F0 E1 FF             		movw	r8, #-31
 131 007e AD F0                   		movw	ax, r8
 132 0080 BD F4                   		movw	r12, ax
 133 0082 FA F4                   		movw	hl, r12
 134 0084 71 F3                   		clr1	[hl].7 ;insvmisalignqi [hl],#1,#7,#0 {0}
  82:../src/r_cg_serial.c ****     /* Set INTST0 low priority */
  83:../src/r_cg_serial.c ****     STPR10 = 1U;
 135                             		.loc 1 83 0
 136 0086 C9 F0 ED FF             		movw	r8, #-19
 137 008a AD F0                   		movw	ax, r8
 138 008c BD F2                   		movw	r10, ax
 139 008e FA F2                   		movw	hl, r10
 140 0090 71 D2                   		set1	[hl].5 ;insvmisalignqi [hl],#1,#5,#1 {0}
  84:../src/r_cg_serial.c ****     STPR00 = 1U;
 141                             		.loc 1 84 0
 142 0092 C9 F0 E9 FF             		movw	r8, #-23
 143 0096 AD F0                   		movw	ax, r8
 144 0098 BD F4                   		movw	r12, ax
 145 009a FA F4                   		movw	hl, r12
 146 009c 71 D2                   		set1	[hl].5 ;insvmisalignqi [hl],#1,#5,#1 {0}
  85:../src/r_cg_serial.c ****     SMR00 = _0020_SAU_SMRMN_INITIALVALUE | _0000_SAU_CLOCK_SELECT_CK00 | _0000_SAU_TRIGGER_SOFTWARE
 147                             		.loc 1 85 0
 148 009e C9 F0 10 01             		movw	r8, #272
 149 00a2 AD F0                   		movw	ax, r8
 150 00a4 BD F2                   		movw	r10, ax
 151 00a6 EA F2                   		movw	de, r10
 152 00a8 30 22 00                		movw	ax, #34
 153 00ab B9                      		movw	[de], ax
  86:../src/r_cg_serial.c ****             _0002_SAU_MODE_UART | _0000_SAU_TRANSFER_END;
  87:../src/r_cg_serial.c ****     SCR00 = _8000_SAU_TRANSMISSION | _0000_SAU_INTSRE_MASK | _0000_SAU_PARITY_NONE | _0080_SAU_LSB 
 154                             		.loc 1 87 0
 155 00ac C9 F0 18 01             		movw	r8, #280
 156 00b0 AD F0                   		movw	ax, r8
 157 00b2 BD F4                   		movw	r12, ax
 158 00b4 EA F4                   		movw	de, r12
 159 00b6 30 97 80                		movw	ax, #-32617
 160 00b9 B9                      		movw	[de], ax
  88:../src/r_cg_serial.c ****             _0007_SAU_LENGTH_8;
  89:../src/r_cg_serial.c ****     SDR00 = _8800_UART0_TRANSMIT_DIVISOR;
 161                             		.loc 1 89 0
 162 00ba C9 F0 10 FF             		movw	r8, #-240
 163 00be AD F0                   		movw	ax, r8
 164 00c0 BD F2                   		movw	r10, ax
 165 00c2 EA F2                   		movw	de, r10
 166 00c4 30 00 88                		movw	ax, #-30720
 167 00c7 B9                      		movw	[de], ax
  90:../src/r_cg_serial.c ****     SO0 |= _0001_SAU_CH0_DATA_OUTPUT_1;
 168                             		.loc 1 90 0
 169 00c8 C9 F2 28 01             		movw	r10, #296
 170 00cc C9 F0 28 01             		movw	r8, #296
 171 00d0 AD F0                   		movw	ax, r8
 172 00d2 BD F4                   		movw	r12, ax
 173 00d4 FA F4                   		movw	hl, r12
 174 00d6 AB                      		movw	ax, [hl]
 175 00d7 BD F0                   		movw	r8, ax
 176 00d9 6A F0 01                		or	r8, #1 ;iorhi3 r8,r8,#1
 177 00dc AD F2                   		movw	ax, r10
 178 00de BD F4                   		movw	r12, ax
 179 00e0 EA F4                   		movw	de, r12
 180 00e2 AD F0                   		movw	ax, r8
 181 00e4 B9                      		movw	[de], ax
  91:../src/r_cg_serial.c ****     SOL0 |= _0000_SAU_CHANNEL0_NORMAL;    /* output level normal */
 182                             		.loc 1 91 0
 183 00e5 C9 F2 34 01             		movw	r10, #308
 184 00e9 C9 F0 34 01             		movw	r8, #308
 185 00ed AD F0                   		movw	ax, r8
 186 00ef BD F4                   		movw	r12, ax
 187 00f1 FA F4                   		movw	hl, r12
 188 00f3 AB                      		movw	ax, [hl]
 189 00f4 BD F0                   		movw	r8, ax
 190 00f6 AD F2                   		movw	ax, r10
 191 00f8 BD F4                   		movw	r12, ax
 192 00fa EA F4                   		movw	de, r12
 193 00fc AD F0                   		movw	ax, r8
 194 00fe B9                      		movw	[de], ax
  92:../src/r_cg_serial.c ****     SOE0 |= _0001_SAU_CH0_OUTPUT_ENABLE;    /* enable UART0 output */
 195                             		.loc 1 92 0
 196 00ff C9 F2 2A 01             		movw	r10, #298
 197 0103 C9 F0 2A 01             		movw	r8, #298
 198 0107 AD F0                   		movw	ax, r8
 199 0109 BD F4                   		movw	r12, ax
 200 010b FA F4                   		movw	hl, r12
 201 010d AB                      		movw	ax, [hl]
 202 010e BD F0                   		movw	r8, ax
 203 0110 6A F0 01                		or	r8, #1 ;iorhi3 r8,r8,#1
 204 0113 AD F2                   		movw	ax, r10
 205 0115 BD F4                   		movw	r12, ax
 206 0117 EA F4                   		movw	de, r12
 207 0119 AD F0                   		movw	ax, r8
 208 011b B9                      		movw	[de], ax
  93:../src/r_cg_serial.c ****     /* Set TxD0 pin */
  94:../src/r_cg_serial.c ****     P1 |= 0x04U;
 209                             		.loc 1 94 0
 210 011c C9 F2 01 FF             		movw	r10, #-255
 211 0120 C9 F0 01 FF             		movw	r8, #-255
 212 0124 AD F0                   		movw	ax, r8
 213 0126 BD F4                   		movw	r12, ax
 214 0128 FA F4                   		movw	hl, r12
 215 012a 8B                      		mov	a, [hl]
 216 012b 9D F0                   		mov	r8, a
 217 012d 6A F0 04                		or	r8, #4
 218 0130 AD F2                   		movw	ax, r10
 219 0132 BD F4                   		movw	r12, ax
 220 0134 EA F4                   		movw	de, r12
 221 0136 8D F0                   		mov	a, r8
 222 0138 99                      		mov	[de], a
  95:../src/r_cg_serial.c ****     PM1 &= 0xFBU;
 223                             		.loc 1 95 0
 224 0139 C9 F2 21 FF             		movw	r10, #-223
 225 013d C9 F0 21 FF             		movw	r8, #-223
 226 0141 AD F0                   		movw	ax, r8
 227 0143 BD F4                   		movw	r12, ax
 228 0145 FA F4                   		movw	hl, r12
 229 0147 8B                      		mov	a, [hl]
 230 0148 9D F0                   		mov	r8, a
 231 014a 5A F0 FB                		and	r8, #-5
 232 014d AD F2                   		movw	ax, r10
 233 014f BD F4                   		movw	r12, ax
 234 0151 EA F4                   		movw	de, r12
 235 0153 8D F0                   		mov	a, r8
 236 0155 99                      		mov	[de], a
  96:../src/r_cg_serial.c **** }
 237                             		.loc 1 96 0
 238 0156 D7                      		ret
 239                             	.LFE1:
 241                             		.global	_R_UART0_Start
 243                             	_R_UART0_Start:
 244                             	.LFB2:
  97:../src/r_cg_serial.c **** 
  98:../src/r_cg_serial.c **** /**************************************************************************************************
  99:../src/r_cg_serial.c **** * Function Name: R_UART0_Start
 100:../src/r_cg_serial.c **** * Description  : This function starts the UART0 module operation.
 101:../src/r_cg_serial.c **** * Arguments    : None
 102:../src/r_cg_serial.c **** * Return Value : None
 103:../src/r_cg_serial.c **** ***************************************************************************************************
 104:../src/r_cg_serial.c **** void R_UART0_Start(void)
 105:../src/r_cg_serial.c **** {
 245                             		.loc 1 105 0
 106:../src/r_cg_serial.c ****     SO0 |= _0001_SAU_CH0_DATA_OUTPUT_1;    /* output level normal */
 246                             		.loc 1 106 0
 247 0157 C9 F2 28 01             		movw	r10, #296
 248 015b C9 F0 28 01             		movw	r8, #296
 249 015f AD F0                   		movw	ax, r8
 250 0161 BD F4                   		movw	r12, ax
 251 0163 FA F4                   		movw	hl, r12
 252 0165 AB                      		movw	ax, [hl]
 253 0166 BD F0                   		movw	r8, ax
 254 0168 6A F0 01                		or	r8, #1 ;iorhi3 r8,r8,#1
 255 016b AD F2                   		movw	ax, r10
 256 016d BD F4                   		movw	r12, ax
 257 016f EA F4                   		movw	de, r12
 258 0171 AD F0                   		movw	ax, r8
 259 0173 B9                      		movw	[de], ax
 107:../src/r_cg_serial.c ****     SOE0 |= _0001_SAU_CH0_OUTPUT_ENABLE;    /* enable UART0 output */
 260                             		.loc 1 107 0
 261 0174 C9 F2 2A 01             		movw	r10, #298
 262 0178 C9 F0 2A 01             		movw	r8, #298
 263 017c AD F0                   		movw	ax, r8
 264 017e BD F4                   		movw	r12, ax
 265 0180 FA F4                   		movw	hl, r12
 266 0182 AB                      		movw	ax, [hl]
 267 0183 BD F0                   		movw	r8, ax
 268 0185 6A F0 01                		or	r8, #1 ;iorhi3 r8,r8,#1
 269 0188 AD F2                   		movw	ax, r10
 270 018a BD F4                   		movw	r12, ax
 271 018c EA F4                   		movw	de, r12
 272 018e AD F0                   		movw	ax, r8
 273 0190 B9                      		movw	[de], ax
 108:../src/r_cg_serial.c ****     SS0 |= _0001_SAU_CH0_START_TRG_ON;    /* enable UART0 transmit */
 274                             		.loc 1 108 0
 275 0191 C9 F2 22 01             		movw	r10, #290
 276 0195 C9 F0 22 01             		movw	r8, #290
 277 0199 AD F0                   		movw	ax, r8
 278 019b BD F4                   		movw	r12, ax
 279 019d FA F4                   		movw	hl, r12
 280 019f AB                      		movw	ax, [hl]
 281 01a0 BD F0                   		movw	r8, ax
 282 01a2 6A F0 01                		or	r8, #1 ;iorhi3 r8,r8,#1
 283 01a5 AD F2                   		movw	ax, r10
 284 01a7 BD F4                   		movw	r12, ax
 285 01a9 EA F4                   		movw	de, r12
 286 01ab AD F0                   		movw	ax, r8
 287 01ad B9                      		movw	[de], ax
 109:../src/r_cg_serial.c ****     STIF0 = 0U;    /* clear INTST0 interrupt flag */
 288                             		.loc 1 109 0
 289 01ae C9 F0 E1 FF             		movw	r8, #-31
 290 01b2 AD F0                   		movw	ax, r8
 291 01b4 BD F2                   		movw	r10, ax
 292 01b6 FA F2                   		movw	hl, r10
 293 01b8 71 D3                   		clr1	[hl].5 ;insvmisalignqi [hl],#1,#5,#0 {0}
 110:../src/r_cg_serial.c ****     STMK0 = 0U;    /* enable INTST0 interrupt */
 294                             		.loc 1 110 0
 295 01ba C9 F0 E5 FF             		movw	r8, #-27
 296 01be AD F0                   		movw	ax, r8
 297 01c0 BD F4                   		movw	r12, ax
 298 01c2 FA F4                   		movw	hl, r12
 299 01c4 71 D3                   		clr1	[hl].5 ;insvmisalignqi [hl],#1,#5,#0 {0}
 111:../src/r_cg_serial.c **** }
 300                             		.loc 1 111 0
 301 01c6 D7                      		ret
 302                             	.LFE2:
 304                             		.global	_R_UART0_Stop
 306                             	_R_UART0_Stop:
 307                             	.LFB3:
 112:../src/r_cg_serial.c **** 
 113:../src/r_cg_serial.c **** /**************************************************************************************************
 114:../src/r_cg_serial.c **** * Function Name: R_UART0_Stop
 115:../src/r_cg_serial.c **** * Description  : This function stops the UART0 module operation.
 116:../src/r_cg_serial.c **** * Arguments    : None
 117:../src/r_cg_serial.c **** * Return Value : None
 118:../src/r_cg_serial.c **** ***************************************************************************************************
 119:../src/r_cg_serial.c **** void R_UART0_Stop(void)
 120:../src/r_cg_serial.c **** {
 308                             		.loc 1 120 0
 121:../src/r_cg_serial.c ****     STMK0 = 1U;    /* disable INTST0 interrupt */
 309                             		.loc 1 121 0
 310 01c7 C9 F0 E5 FF             		movw	r8, #-27
 311 01cb AD F0                   		movw	ax, r8
 312 01cd BD F2                   		movw	r10, ax
 313 01cf FA F2                   		movw	hl, r10
 314 01d1 71 D2                   		set1	[hl].5 ;insvmisalignqi [hl],#1,#5,#1 {0}
 122:../src/r_cg_serial.c ****     ST0 |= _0001_SAU_CH0_STOP_TRG_ON;    /* disable UART0 transmit */
 315                             		.loc 1 122 0
 316 01d3 C9 F2 24 01             		movw	r10, #292
 317 01d7 C9 F0 24 01             		movw	r8, #292
 318 01db AD F0                   		movw	ax, r8
 319 01dd BD F4                   		movw	r12, ax
 320 01df FA F4                   		movw	hl, r12
 321 01e1 AB                      		movw	ax, [hl]
 322 01e2 BD F0                   		movw	r8, ax
 323 01e4 6A F0 01                		or	r8, #1 ;iorhi3 r8,r8,#1
 324 01e7 AD F2                   		movw	ax, r10
 325 01e9 BD F4                   		movw	r12, ax
 326 01eb EA F4                   		movw	de, r12
 327 01ed AD F0                   		movw	ax, r8
 328 01ef B9                      		movw	[de], ax
 123:../src/r_cg_serial.c ****     SOE0 &= ~_0001_SAU_CH0_OUTPUT_ENABLE;    /* disable UART0 output */
 329                             		.loc 1 123 0
 330 01f0 C9 F2 2A 01             		movw	r10, #298
 331 01f4 C9 F0 2A 01             		movw	r8, #298
 332 01f8 AD F0                   		movw	ax, r8
 333 01fa BD F4                   		movw	r12, ax
 334 01fc FA F4                   		movw	hl, r12
 335 01fe AB                      		movw	ax, [hl]
 336 01ff BD F0                   		movw	r8, ax
 337 0201 5A F0 FE                		and	r8, #254 ;andhi3 r8,r8,#-2
 338 0204 AD F2                   		movw	ax, r10
 339 0206 BD F4                   		movw	r12, ax
 340 0208 EA F4                   		movw	de, r12
 341 020a AD F0                   		movw	ax, r8
 342 020c B9                      		movw	[de], ax
 124:../src/r_cg_serial.c ****     STIF0 = 0U;    /* clear INTST0 interrupt flag */
 343                             		.loc 1 124 0
 344 020d C9 F0 E1 FF             		movw	r8, #-31
 345 0211 AD F0                   		movw	ax, r8
 346 0213 BD F2                   		movw	r10, ax
 347 0215 FA F2                   		movw	hl, r10
 348 0217 71 D3                   		clr1	[hl].5 ;insvmisalignqi [hl],#1,#5,#0 {0}
 125:../src/r_cg_serial.c **** }
 349                             		.loc 1 125 0
 350 0219 D7                      		ret
 351                             	.LFE3:
 353                             		.global	_R_UART0_Send
 355                             	_R_UART0_Send:
 356                             	.LFB4:
 126:../src/r_cg_serial.c **** 
 127:../src/r_cg_serial.c **** /**************************************************************************************************
 128:../src/r_cg_serial.c **** * Function Name: R_UART0_Send
 129:../src/r_cg_serial.c **** * Description  : This function sends UART0 data.
 130:../src/r_cg_serial.c **** * Arguments    : tx_buf -
 131:../src/r_cg_serial.c **** *                    transfer buffer pointer
 132:../src/r_cg_serial.c **** *                tx_num -
 133:../src/r_cg_serial.c **** *                    buffer size
 134:../src/r_cg_serial.c **** * Return Value : status -
 135:../src/r_cg_serial.c **** *                    MD_OK or MD_ARGERROR
 136:../src/r_cg_serial.c **** ***************************************************************************************************
 137:../src/r_cg_serial.c **** MD_STATUS R_UART0_Send(uint8_t * const tx_buf, uint16_t tx_num)
 138:../src/r_cg_serial.c **** {
 357                             		.loc 1 138 0
 358                             		; start of function
 359                             		; locals: 2 bytes
 360 021a 20 02                   		subw	sp, #2
 361                             	.LCFI0:
 139:../src/r_cg_serial.c ****     MD_STATUS status = MD_OK;
 362                             		.loc 1 139 0
 363 021c F6                      		clrw	ax
 364 021d B8 00                   		movw	[sp], ax
 140:../src/r_cg_serial.c **** 
 141:../src/r_cg_serial.c ****     if (tx_num < 1U)
 365                             		.loc 1 141 0
 366 021f A8 08                   		movw	ax, [sp+8]
 367 0221 44 00 00                		cmpw	ax, #0
 368 0224 61 E8                   		 skz
 369 0226 EC 33 02 00             		 br	!!.L6
 142:../src/r_cg_serial.c ****     {
 143:../src/r_cg_serial.c ****         status = MD_ARGERROR;
 370                             		.loc 1 143 0
 371 022a 30 81 00                		movw	ax, #129
 372 022d B8 00                   		movw	[sp], ax
 373 022f EC 8A 02 00             		br	!!.L7
 374                             	.L6:
 144:../src/r_cg_serial.c ****     }
 145:../src/r_cg_serial.c ****     else
 146:../src/r_cg_serial.c ****     {
 147:../src/r_cg_serial.c ****         gp_uart0_tx_address = tx_buf;
 375                             		.loc 1 147 0
 376 0233 A8 06                   		movw	ax, [sp+6]
 377 0235 BD F0                   		movw	r8, ax
 378 0237 BF 00 00                		movw	!_gp_uart0_tx_address, ax
 148:../src/r_cg_serial.c ****         g_uart0_tx_count = tx_num;
 379                             		.loc 1 148 0
 380 023a A8 08                   		movw	ax, [sp+8]
 381 023c BD F0                   		movw	r8, ax
 382 023e BF 00 00                		movw	!_g_uart0_tx_count, ax
 149:../src/r_cg_serial.c ****         STMK0 = 1U;    /* disable INTST0 interrupt */
 383                             		.loc 1 149 0
 384 0241 C9 F0 E5 FF             		movw	r8, #-27
 385 0245 AD F0                   		movw	ax, r8
 386 0247 BD F2                   		movw	r10, ax
 387 0249 FA F2                   		movw	hl, r10
 388 024b 71 D2                   		set1	[hl].5 ;insvmisalignqi [hl],#1,#5,#1 {0}
 150:../src/r_cg_serial.c ****         TXD0 = *gp_uart0_tx_address;
 389                             		.loc 1 150 0
 390 024d C9 F2 10 FF             		movw	r10, #-240
 391 0251 AF 00 00                		movw	ax, !_gp_uart0_tx_address
 392 0254 BD F0                   		movw	r8, ax
 393 0256 BD F4                   		movw	r12, ax
 394 0258 FA F4                   		movw	hl, r12
 395 025a 8B                      		mov	a, [hl]
 396 025b 9D F0                   		mov	r8, a
 397 025d AD F2                   		movw	ax, r10
 398 025f BD F4                   		movw	r12, ax
 399 0261 EA F4                   		movw	de, r12
 400 0263 8D F0                   		mov	a, r8
 401 0265 99                      		mov	[de], a
 151:../src/r_cg_serial.c ****         gp_uart0_tx_address++;
 402                             		.loc 1 151 0
 403 0266 AF 00 00                		movw	ax, !_gp_uart0_tx_address
 404 0269 BD F0                   		movw	r8, ax
 405 026b A6 F0                   		incw	r8
 406 026d AD F0                   		movw	ax, r8
 407 026f BF 00 00                		movw	!_gp_uart0_tx_address, ax
 152:../src/r_cg_serial.c ****         g_uart0_tx_count--;
 408                             		.loc 1 152 0
 409 0272 AF 00 00                		movw	ax, !_g_uart0_tx_count
 410 0275 BD F0                   		movw	r8, ax
 411 0277 B6 F0                   		decw	r8
 412 0279 AD F0                   		movw	ax, r8
 413 027b BF 00 00                		movw	!_g_uart0_tx_count, ax
 153:../src/r_cg_serial.c ****         STMK0 = 0U;    /* enable INTST0 interrupt */
 414                             		.loc 1 153 0
 415 027e C9 F0 E5 FF             		movw	r8, #-27
 416 0282 AD F0                   		movw	ax, r8
 417 0284 BD F2                   		movw	r10, ax
 418 0286 FA F2                   		movw	hl, r10
 419 0288 71 D3                   		clr1	[hl].5 ;insvmisalignqi [hl],#1,#5,#0 {0}
 420                             	.L7:
 154:../src/r_cg_serial.c ****     }
 155:../src/r_cg_serial.c **** 
 156:../src/r_cg_serial.c ****     return (status);
 421                             		.loc 1 156 0
 422 028a A8 00                   		movw	ax, [sp]
 423 028c BD F0                   		movw	r8, ax
 157:../src/r_cg_serial.c **** }
 424                             		.loc 1 157 0
 425 028e 10 02                   		addw	sp, #2
 426 0290 D7                      		ret
 427                             	.LFE4:
 491                             	.Letext0:
 492                             		.file 2 "../src/iodefine.h"
 493                             		.file 3 "../src/iodefine_ext.h"
 494                             		.file 4 "../src/r_cg_macrodriver.h"
